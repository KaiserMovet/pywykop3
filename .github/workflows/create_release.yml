name: Create Release

on:
  workflow_dispatch:

jobs:
  build:
    name: Test and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11"
      - name: Upgrade Pip
        run: |
          python -m pip install --upgrade pip
      - name: Tests
        steps:
          - name: Install dependencies
            run: |
              pip install -r requirements.txt
              pip install flake8 pytest pylint
          - name: TESTS - Flake8
            run: |
              # stop the build if there are Python syntax errors or undefined names
              flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
              # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
              flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          - name: TESTS - Pylint
            run: |
              pylint $(git ls-files '*.py') --rcfile=setup.cfg
          - name: TESTS - Pytest
            run: |
              pytest --refresh-token ${{ secrets.REFRESH_TOKEN }}

      - name: Version
        steps:
          - name: VERSION - Get current version
            id: current_version
            uses: xom9ikk/version-by-tag@v1
          - name: VERSION - Next Version
            uses: vemel/nextversion@0.1.1
            with:
              version: ${{ steps.current_version.outputs.semver  }}
            id: next_version
          - name: VERSION - Show next version
            run: echo ${{ steps.next_version.outputs.minor  }}

      - name: Documentation
        steps:
          - name: DOCUMENTATION - Install dependencies
            run: |
              pip install -r docs_requirements.txt
          - name: DOCUMENTATION - Generate docs
            run: make html
            working-directory: docs
            env:
              TARGET_VERSION: ${{ steps.next_version.outputs.minor }}
          - name: DOCUMENTATION - Init new repo in dist folder and commit generated files
            run: |
              cd docs/build/html/
              touch .nojekyll
              git init
              git add -A -f
              git config --local user.email "action@github.com"
              git config --local user.name "GitHub Action"
              git commit -m 'deploy'
          - name: DOCUMENTATION - Force push to destination branch
            uses: ad-m/github-push-action@v0.6.0
            with:
              github_token: ${{ secrets.GITHUB_TOKEN }}
              branch: gh-pages
              force: true
              directory: ./docs/build/html

      - name: Release
        steps:
          - name: RELEASE - Generate Release Notes
            id: release_notes
            run: |
              git log $(git describe --tags --abbrev=0)..HEAD --format="- %s%n" > release-notes.txt
            shell: bash
          - name: "Read file contents"
            uses: andstor/file-reader-action@v1
            id: read_file
            with:
              path: "release-notes.txt"
          - name: RELEASE - Create Release
            id: create_release
            uses: actions/create-release@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              tag_name: ${{ steps.next_version.outputs.minor }}
              release_name: pywykop3 - ${{ steps.next_version.outputs.minor }}
              body: ${{ steps.read_file.outputs.contents }}"
              draft: false
              prerelease: false

      - name: PYPI
        steps:
          - name: PYPI - Set up Python
            uses: actions/setup-python@v3
            with:
              python-version: "3.x"
          - name: PYPI - Install dependencies
            run: |
              python -m pip install --upgrade pip
              pip install build
          - name: PYPI - Build package
            run: python -m build
            env:
              TARGET_VERSION: ${{ steps.next_version.outputs.minor }}
          - name: PYPI - Publish package
            uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
            with:
              user: __token__
              password: ${{ secrets.PYPI_API_TOKEN }}
