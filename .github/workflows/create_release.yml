name: Create Release

on:
  workflow_dispatch:

jobs:
  build:
    name: Test and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint
          pip install flake8 pytest
          pip install -r docs_requirements.txt

      # TESTS
      - name: TESTS - Analysing the code with pylint
        run: |
          pylint $(git ls-files '*.py') --rcfile=setup.cfg
      - name: TESTS - Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: TESTS - Test with pytest
        run: |
          pytest --refresh-token ${{ secrets.REFRESH_TOKEN }}

      # DOCUMENTATION
      - name: DOCUMENTATION - Install dependencies
        run: |
          pip install -r docs_requirements.txt
      - name: DOCUMENTATION - Generate docs
        run: make html
        working-directory: docs
      - name: DOCUMENTATION - Init new repo in dist folder and commit generated files
        run: |
          cd docs/build/html/
          touch .nojekyll
          git init
          git add -A -f
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m 'deploy'
      - name: DOCUMENTATION - Force push to destination branch
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          force: true
          directory: ./docs/build/html
      # VERSION
      - name: VERSION - Get current version
        id: current_version
        uses: xom9ikk/version-by-tag@v1

      - name: VERSION - Next Version
        uses: vemel/nextversion@0.1.1
        with:
          version: ${{ steps.current_version.outputs.semver  }}
        id: next_version

      - name: VERSION - Show next version
        run: echo ${{ steps.next_version.outputs.minor  }}
      # RELEASE
      - name: RELEASE - Update Version in setup.py
        run: |
          sed -i "s/version='[0-9].[0-9].[0-9]',/version='${{ steps.next_version.outputs.minor }}',/" setup.py
      - name: RELEASE - Generate Release Notes
        id: release_notes
        run: |
          git log $(git describe --tags --abbrev=0)..HEAD --format="- %s%n" > release-notes.txt
        shell: bash
      - name: RELEASE - Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_NOTES: |
            cat release-notes.txt
        with:
          tag_name: ${{ steps.next_version.outputs.minor }}
          release_name: pywykop3 - ${{ steps.next_version.outputs.minor }}
          body: ${{ env.RELEASE_NOTES }}
          draft: false
          prerelease: false
